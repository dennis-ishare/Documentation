.. _refTrustedList:

Trusted list
============

Used to obtain the iSHARE trusted list of certificate authorities. Currently, eIDAS certificate issuer certificate authorities.


Parameters
~~~~~~~~~~

``Authorization``
    | **String (JWT)**.
    | A signed JWT which contains information about trusted list authorities.

**Decoded trusted_list_token parameters:**

It contains :ref:`iSHARE compliant JWT claims<refJWTPayload>`. In addition to that it also contains the following parameters:

``trusted_list``
    | **Array of Objects**. Root level.
    | Contains collection of trusted certificate authorities.

    ``subject``
        | **String**. Contained in the object of ``trusted_list``.
        | Certificate authority subject name.

    ``certificate_fingerprint``
        | **String**. Contained in the object of ``trusted_list``.
        | SHA256 fingerprint of the certificate.

    ``validity``
        | **String**. Contained in the object of ``trusted_list``.
        | Validity of the certificate. Available values are *valid* or *invalid*.

    ``status``
        | **String**. Contained in the object of ``trusted_list``.
        | Status of the certificate. Available values are *granted*, *withdrawn*, *supervisionceased* and *undersupervision*.

200 OK Example
~~~~~~~~~~~~~~

::

    < Content-Type: application/json

    {
      "trusted_list_token": ".eyJpc3MiOiJFVS5FT1JJLk5MMDAwMDAwMDAwIiwic3ViIjoiRVUuRU9SSS5OTDAwMDAwMDAwMCIsImp0aSI6Ijk3NzRkOTI0YjhjMDRiOTdiZDNmMDgwN2RlYjE1NGI2IiwiaWF0IjoxNTkxOTY2MDEwLCJleHAiOjE1OTE5NjYwNDAsImF1ZCI6IkVVLkVPUkkuTkwwMDAwMDAwMDEiLCJ0cnVzdGVkX2xpc3QiOlt7InN1YmplY3QiOiJDPU5MLCBPPVN0YWF0IGRlciBOZWRlcmxhbmRlbiwgQ049VEVTVCBTdGFhdCBkZXIgTmVkZXJsYW5kZW4gT3JnYW5pc2F0aWUgU2VydmljZXMgQ0EgLSBHMyIsImNlcnRpZmljYXRlX2ZpbmdlcnByaW50IjoiREMxM0ZDOTRGRjAxNDlERTFCMDdGNzk2NUY2NTVBRUQ1NEM2QTZCREE3QURGNzFBNzMyRkZDRkFCQzQ1NEM3QSIsInZhbGlkaXR5IjoidmFsaWQiLCJzdGF0dXMiOiJncmFudGVkIn0seyJzdWJqZWN0IjoiQz1OTCwgTz1pU0hBUkUgRm91bmRhdGlvbiwgQ049VEVTVCBpU0hBUkUgRm91bmRhdGlvbiBQS0lvdmVyaGVpZCBPcmdhbmlzYXRpZSBTZXJ2ZXIgQ0EgLSBHMyIsImNlcnRpZmljYXRlX2ZpbmdlcnByaW50IjoiRjIxODEzM0NEM0FDMkQ5NzBEMTBDQTQ2QkIwM0Y4MzI0NTMzMjRCMEY0QUY1QzNGNjFCQUQ2RkRFRUM1RUI4MyIsInZhbGlkaXR5IjoidmFsaWQiLCJzdGF0dXMiOiJncmFudGVkIn0seyJzdWJqZWN0IjoiQz1OTCwgTz1URVNUIFN0YWF0IGRlciBOZWRlcmxhbmRlbiwgQ049VEVTVCBTdGFhdCBkZXIgTmVkZXJsYW5kZW4gUm9vdCBDQSAtIEczIiwiY2VydGlmaWNhdGVfZmluZ2VycHJpbnQiOiI5OEM5QzE0RjdGMUY5QTgzQTc0NEUwQUNCQTlEQTZBNDdFRTk2RTA1M0Q3Mjc5NTQ1N0E1QkMwMjA3MjI5RDQzIiwidmFsaWRpdHkiOiJ2YWxpZCIsInN0YXR1cyI6ImdyYW50ZWQifSx7InN1YmplY3QiOiJDTj1URVNUIGlTSEFSRSBGb3VuZGF0aW9uIGVJREFTIiwiY2VydGlmaWNhdGVfZmluZ2VycHJpbnQiOiI4QzM5REQwNkUzNURFODQ2NzAwNEE1NDJEMENBNEI4RkRDN0Q2RjhGNzEzRjQwQTM1QkQ5RTY1OTM4QTE5MUNGIiwidmFsaWRpdHkiOiJ2YWxpZCIsInN0YXR1cyI6ImdyYW50ZWQifSx7InN1YmplY3QiOiJDPU5MLCBPPWlTSEFSRSwgT1U9VGVzdCwgQ049aVNIQVJFVGVzdENBIiwiY2VydGlmaWNhdGVfZmluZ2VycHJpbnQiOiJBNzhGREY3QkExM0JCRDk1QzYyMzY5NzJERDAwM0ZBRTA3RjRFNDQ3Qjc5MUI2RUY2NzM3QUQyMkYwQjYxODYyIiwidmFsaWRpdHkiOiJ2YWxpZCIsInN0YXR1cyI6ImdyYW50ZWQifSx7InN1YmplY3QiOiJDTj1URVNUIGlTSEFSRSBFVSBJc3N1aW5nIENlcnRpZmljYXRpb24gQXV0aG9yaXR5IEc1IiwiY2VydGlmaWNhdGVfZmluZ2VycHJpbnQiOiJGRDU1OTNEQzg3NEVDQzExMzNDMjFBNzcyNTlDMzU5MjU1MkVDMEM4OURGQ0Q3QUIzQzBCRENGRDczRjBGNUNDIiwidmFsaWRpdHkiOiJ2YWxpZCIsInN0YXR1cyI6ImdyYW50ZWQifSx7InN1YmplY3QiOiJDPU5MLCBPPWlTSEFSRSwgT1U9VGVzdCwgQ049aVNIQVJFVGVzdENBX1RMUyIsImNlcnRpZmljYXRlX2ZpbmdlcnByaW50IjoiREYyRkY1MUQxQjI1NTlENjg2NzIzQzk3MDM3REM5RDVDNTg5NDA2Q0FDNEY4NEMyOUFCM0Q0M0UwMTI2MjUxRCIsInZhbGlkaXR5IjoidmFsaWQiLCJzdGF0dXMiOiJncmFudGVkIn1dfQ.OIGt8osaIt4065F3EtCAYdO6xZgHzchjR3Y6EDiUlp3lPtvtTquDt4HOTosdx4l0_AaBBFBdsx46iN8UJFiROxYKjrRai01-2GeFMv6cbYlm_LJq4rnY440ZwysCCTAGTiCrCYiiDLZwxIjLBvrEkXVmKJw4EtGb27AYS9tK2TPHDU6OobH0wYyumR4qmASI7ciCULJucZCAHmTtq3wu_Tsg3xpGgAZdGFx4CQB_u3o_HgXzehRg8dAxxknrp8Nv7nCsq1NF17iu004Eqj8UezpcZiP9-MGlBVrk24a3LlIMBecq2TyAkf7Umd-Qb98EWWy7Vu9GHHD6fHjW2iiaDQ"
    }

Decoded JWT Payload
^^^^^^^^^^^^^^^^^^^

.. code-block:: json

    {
      "iss": "EU.EORI.NL000000000",
      "sub": "EU.EORI.NL000000000",
      "jti": "9774d924b8c04b97bd3f0807deb154b6",
      "iat": 1591966010,
      "exp": 1591966040,
      "aud": "EU.EORI.NL000000001",
      "trusted_list": [
        {
          "subject": "C=NL, O=Staat der Nederlanden, CN=TEST Staat der Nederlanden Organisatie Services CA - G3",
          "certificate_fingerprint": "DC13FC94FF0149DE1B07F7965F655AED54C6A6BDA7ADF71A732FFCFABC454C7A",
          "validity": "valid",
          "status": "granted"
        },
        {
          "subject": "C=NL, O=iSHARE Foundation, CN=TEST iSHARE Foundation PKIoverheid Organisatie Server CA - G3",
          "certificate_fingerprint": "F218133CD3AC2D970D10CA46BB03F832453324B0F4AF5C3F61BAD6FDEEC5EB83",
          "validity": "valid",
          "status": "granted"
        },
        {
          "subject": "C=NL, O=TEST Staat der Nederlanden, CN=TEST Staat der Nederlanden Root CA - G3",
          "certificate_fingerprint": "98C9C14F7F1F9A83A744E0ACBA9DA6A47EE96E053D72795457A5BC0207229D43",
          "validity": "valid",
          "status": "granted"
        },
        {
          "subject": "CN=TEST iSHARE Foundation eIDAS",
          "certificate_fingerprint": "8C39DD06E35DE8467004A542D0CA4B8FDC7D6F8F713F40A35BD9E65938A191CF",
          "validity": "valid",
          "status": "granted"
        },
        {
          "subject": "C=NL, O=iSHARE, OU=Test, CN=iSHARETestCA",
          "certificate_fingerprint": "A78FDF7BA13BBD95C6236972DD003FAE07F4E447B791B6EF6737AD22F0B61862",
          "validity": "valid",
          "status": "granted"
        },
        {
          "subject": "CN=TEST iSHARE EU Issuing Certification Authority G5",
          "certificate_fingerprint": "FD5593DC874ECC1133C21A77259C3592552EC0C89DFCD7AB3C0BDCFD73F0F5CC",
          "validity": "valid",
          "status": "granted"
        },
        {
          "subject": "C=NL, O=iSHARE, OU=Test, CN=iSHARETestCA_TLS",
          "certificate_fingerprint": "DF2FF51D1B2559D686723C97037DC9D5C589406CAC4F84C29AB3D43E0126251D",
          "validity": "valid",
          "status": "granted"
        }
      ]
    }
